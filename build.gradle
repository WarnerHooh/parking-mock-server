buildscript {
    ext {
        springBootVersion = '2.1.4.RELEASE'
        springCloudContractVersion = '2.1.0.RELEASE'
    }
    repositories {
        maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.springframework.cloud:spring-cloud-contract-gradle-plugin:${springCloudContractVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'spring-cloud-contract'
group = 'dmall.com'
//version = "0.0.1-SNAPSHOT.$System.env.BUILD_NUMBER"
version = "0.0.1-SNAPSHOT.$System.env.BUILD_NUMBER"
sourceCompatibility = 1.8

jar {
    baseName = 'parking'
    enabled=true
}

sourceSets {
    integrationTest {
        java.srcDir 'src/integrationTest/java'
        resources.srcDir 'src/integrationTest/resources'
    }
}

bootJar {
//    classifier = 'boot'
    manifest {
        attributes 'Start-Class': 'parking.mock.server.App'
    }
    launchScript{
        properties 'JAVA_OPTS': '-Dspring.profiles.active=integration'
    }
}

repositories {
    maven {url 'http://maven.aliyun.com/nexus/content/groups/public/'}
    mavenLocal()
    mavenCentral()
}

ext {
    springCloudVersion = 'Greenwich.SR1'
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-test')
    compile('org.springframework.cloud:spring-cloud-starter-contract-stub-runner')
    // https://mvnrepository.com/artifact/io.github.openfeign/feign-core
    compile group: 'io.github.openfeign', name: 'feign-core', version: '10.2.0'
    compile group: 'io.github.openfeign', name: 'feign-jackson', version: '10.2.0'
    // https://mvnrepository.com/artifact/io.github.openfeign/feign-slf4j
    compile group: 'io.github.openfeign', name: 'feign-slf4j', version: '10.2.0'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
//    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    // https://mvnrepository.com/artifact/io.reactivex.rxjava2/rxjava
    compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.2.8'
    compile group: 'ma.glasnost.orika', name: 'orika-core', version: '1.5.1'
    testCompile('io.rest-assured:rest-assured:3.2.0')
    testCompile('io.rest-assured:spring-mock-mvc:3.2.0')
    testCompile 'org.mockito:mockito-core:2.7.22'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    // https://mvnrepository.com/artifact/com.h2database/h2
    compile group: 'com.h2database', name: 'h2', version: '1.4.199'
    compile 'mysql:mysql-connector-java'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'

    compileOnly 'org.projectlombok:lombok:1.18.6'
    annotationProcessor 'org.projectlombok:lombok:1.18.6'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"


    // For integration test
    integrationTestCompile sourceSets.main.output
    integrationTestCompile sourceSets.test.output
    integrationTestCompile configurations.testCompile
    integrationTestRuntime configurations.testCompile
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

contracts {
    contractsDslDir = project.file("api")
}

task unitTest(type: Test) {
    useJUnitPlatform {
        excludeTags 'integrationTest'
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags 'integrationTest'
    }
}

bootRun.dependsOn generateClientStubs
